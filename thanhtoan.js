// ‚úÖ K·∫øt n·ªëi Firebase
import { db } from "./fire.js"; 
import { setDoc, doc, collection } from "https://www.gstatic.com/firebasejs/11.5.0/firebase-firestore.js";
import { saveRevenueToIndexedDB } from "./index.js";

document.addEventListener("DOMContentLoaded", function () {
    const tableId = localStorage.getItem("tableId");
    const totalAmount = localStorage.getItem("totalAmount");
    const cartItems = JSON.parse(localStorage.getItem("cartItems")) || [];

    // Ki·ªÉm tra ph·∫ßn t·ª≠ c√≥ t·ªìn t·∫°i kh√¥ng tr∆∞·ªõc khi c·∫≠p nh·∫≠t
    const tableIdElement = document.getElementById("table-id");
    const totalAmountElement = document.getElementById("total-amount");
    const cartList = document.getElementById("cart-list");

    if (tableIdElement) tableIdElement.innerText = `B√†n ƒÉn: ${tableId}`;
    if (totalAmountElement) totalAmountElement.innerText = `T·ªïng ti·ªÅn: ${totalAmount} VND`;

    if (cartList) {
        cartItems.forEach(item => {
            let li = document.createElement("li");
            li.textContent = `${item.name} - ${item.price} VND (x${item.quantity})`;
            cartList.appendChild(li);
        });
    }

    // G·ªçi h√†m hi·ªÉn th·ªã m√£ QR n·∫øu c√≥ ƒë·ªß th√¥ng tin
    if (tableId && totalAmount) {
        generateQRCode(tableId, totalAmount);
    } else {
        console.error("‚ùå Thi·∫øu th√¥ng tin ƒë·ªÉ t·∫°o m√£ QR!");
    }
    const confirmPaymentBtn = document.getElementById("confirm-payment-btn");
    if (confirmPaymentBtn) {
        confirmPaymentBtn.addEventListener("click", async function () {
            // G·ªçi h√†m x√°c nh·∫≠n thanh to√°n
            await confirmCashPayment();
        });
    }
});

// ===============================
// üìå **H√†m t·∫°o m√£ QR thanh to√°n**
// ===============================
function generateQRCode(tableId, totalAmount) {
    const qrImg = document.getElementById("qr-code");
    if (!qrImg) {
        console.error("‚ùå Kh√¥ng t√¨m th·∫•y th·∫ª <img id='qr-code'> trong HTML.");
        return;
    }

    // üî• URL t·∫°o m√£ QR v·ªõi s·ªë ti·ªÅn ch√≠nh x√°c
    const qrUrl = `https://img.vietqr.io/image/MbBank-0945768636-compact.jpg?amount=${totalAmount}&addInfo=ThanhToanB√†n${tableId}&size=300x300`;

    qrImg.src = qrUrl;
    console.log("‚úÖ M√£ QR ƒë√£ ƒë∆∞·ª£c t·∫°o:", qrUrl);
}

// ===============================
// üí∞ **X√°c nh·∫≠n thanh to√°n ti·ªÅn m·∫∑t & l∆∞u v√†o Firebase**
// ===============================
// üí∞ **X√°c nh·∫≠n thanh to√°n ti·ªÅn m·∫∑t & l∆∞u v√†o Firebase**
// X·ª≠ l√Ω thanh to√°n
async function confirmCashPayment() {
    const tableId = localStorage.getItem("tableId");
    let totalAmount = parseFloat(localStorage.getItem("totalAmount"));
    const cartItems = JSON.parse(localStorage.getItem("cartItems")) || [];

    // Ki·ªÉm tra th√¥ng tin thanh to√°n
    if (!tableId || isNaN(totalAmount) || totalAmount <= 0 || cartItems.length === 0) {
        alert("‚ùå Th√¥ng tin thanh to√°n kh√¥ng h·ª£p l·ªá!");
        return;
    }

    try {
        // T·∫°o ID ƒë∆°n h√†ng t·ª´ th·ªùi gian hi·ªán t·∫°i theo ƒë·ªãnh d·∫°ng gi·ªù/ph√∫t/gi√¢y - ng√†y/th√°ng/nƒÉm
        const now = new Date();
        const hours = now.getHours().toString().padStart(2, '0'); // ƒê·∫£m b·∫£o c√≥ 2 ch·ªØ s·ªë
        const minutes = now.getMinutes().toString().padStart(2, '0'); // ƒê·∫£m b·∫£o c√≥ 2 ch·ªØ s·ªë
        const seconds = now.getSeconds().toString().padStart(2, '0'); // ƒê·∫£m b·∫£o c√≥ 2 ch·ªØ s·ªë
        const day = now.getDate().toString().padStart(2, '0'); // ƒê·∫£m b·∫£o c√≥ 2 ch·ªØ s·ªë
        const month = (now.getMonth() + 1).toString().padStart(2, '0'); // ƒê·∫£m b·∫£o c√≥ 2 ch·ªØ s·ªë
        const year = now.getFullYear();

        // T·∫°o ID theo ƒë·ªãnh d·∫°ng gi·ªù/ph√∫t/gi√¢y - ng√†y/th√°ng/nƒÉm
        const orderId = `${hours}/${minutes}/${seconds} - ${day}/${month}/${year}`;

        const timestamp = new Date().toISOString();
        const orderData = {
            id: orderId, // S·ª≠ d·ª•ng ID theo th·ªùi gian
            tableId: tableId,
            totalAmount: totalAmount,
            items: cartItems,
            timestamp: timestamp
        };
        localStorage.removeItem(`cart_ban${tableId}`);
        localStorage.removeItem("cartItems");
        localStorage.removeItem("tableId");
        localStorage.removeItem("totalAmount"); 
        console.log("‚úÖ ƒêang x√≥a gi·ªè h√†ng kh·ªèi localStorage...");
       
        // L∆∞u v√†o Firebase
        await setDoc(doc(db, "revenue", orderId), orderData);
        console.log(`‚úÖ ƒê∆°n h√†ng ${orderId} ƒë√£ l∆∞u v√†o Firebase!`);

        // L∆∞u v√†o IndexedDB
        await saveRevenueToIndexedDB(orderData);
        console.log("‚úÖ D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c ƒë·ªìng b·ªô xu·ªëng IndexedDB!");

        // X√≥a gi·ªè h√†ng kh·ªèi localStorage ngay l·∫≠p t·ª©c sau khi thanh to√°n th√†nh c√¥ng
        console.log("‚úÖ ƒêang x√≥a gi·ªè h√†ng kh·ªèi localStorage...");
        localStorage.removeItem(`cart_ban${tableId}`);
        
        // Ki·ªÉm tra l·∫°i gi·ªè h√†ng ƒë·ªÉ ƒë·∫£m b·∫£o ƒë√£ x√≥a
        console.log("Gi·ªè h√†ng sau khi x√≥a: ", localStorage.getItem("cartItems"));

        // Th√¥ng b√°o thanh to√°n th√†nh c√¥ng
        alert(`‚úÖ Thanh to√°n ti·ªÅn m·∫∑t cho B√†n s·ªë ${tableId} ƒë√£ th√†nh c√¥ng!`);

        // Chuy·ªÉn trang sau khi thanh to√°n
        window.location.href = "quanlibanan.html";
    } catch (error) {
        console.error("‚ùå L·ªói khi thanh to√°n:", error);
        alert("‚ùå Kh√¥ng th·ªÉ l∆∞u thanh to√°n, vui l√≤ng th·ª≠ l·∫°i!");
    }
}
